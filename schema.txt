package db

// 1
var schemaUser = `
	CREATE TABLE IF NOT EXISTS users (
	id UUID PRIMARY KEY,
	full_name VARCHAR(50),
	username VARCHAR(50) NOT NULL UNIQUE,
	password VARCHAR(255) NOT NULL,
	photo VARCHAR(255),
	shipping_address VARCHAR(255),
	user_type CHAR(3) NOT NULL DEFAULT 'BR1',
	created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  	updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL
);` //user type => B OR S (BUYYER OR SELLER) + R (RATING) + 1..10

// 2
var schemaCatagories = `CREATE TABLE IF NOT EXISTS categories (
	id UUID PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	components VARCHAR(100) NOT NULL
);`

var insertCatagories = `INSERT INTO categories (id, name, components) VALUES ($1, $2, $3)
`

// 3
var schemaProduct = `CREATE TABLE IF NOT EXISTS products (
	id UUID PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	description VARCHAR(200),
	price DECIMAL(10, 2) NOT NULL,
	stock INTEGER NOT NULL DEFAULT 0,
	category_id UUID REFERENCES categories(id) ON DELETE SET NULL,
	seller_id UUID NOT NULL REFERENCES users(id),
	created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  	updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  	deleted_at TIMESTAMPTZ DEFAULT NULL
);`

// 4
var schemaOrders = `CREATE TABLE IF NOT EXISTS orders (
	id UUID PRIMARY KEY,
	product_id UUID NOT NULL REFERENCES products(id),
	user_id UUID NOT NULL  REFERENCES users(id),
	note VARCHAR(150),
	purchase_source VARCHAR(15) NOT NULL DEFAULT 'direct',
	purchase_status VARCHAR(15) NOT NULL,
	quantity INTEGER NOT NULL DEFAULT 0,
	created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  	updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL
);` /*  purchase_source => direct/cart
purchase_status => IN_CART/PENDING/IN_PROGRSS/ON_HOLD/SHIPPED/DELIVERED/RETURNED
*/

var schemaTransaction = `CREATE TABLE IF NOT EXISTS transactions (
	id UUID PRIMARY KEY,
	discount INTEGER NOT NULL DEFAULT 0,
	pre_discount_amount INTEGER NOT NULL DEFAULT 0,
	final_amount INTEGER NOT NULL DEFAULT 0,
	invoice VARCHAR(255) NOT NULL,
	payment_method VARCHAR(50) NOT NULL,
	created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  	updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL
);`

var schemaVoucher = `CREATE TABLE IF NOT EXISTS vouchers (
	id UUID PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	type CHAR(3) NOT NULL,
	status CHAR(1) NOT NULL DEFAULT 'A',
	discount_percentage SMALLINT DEFAULT 0,
	created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  	updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	deleted_at TIMESTAMPTZ DEFAULT NULL
);`
var schemaOrderTransaction = `CREATE TABLE IF NOT EXISTS order_transactions (
	id UUID PRIMARY KEY,
	orders_id UUID NOT NULL REFERENCES orders(id),
	transaction_id UUID NOT NULL REFERENCES transactions(id),
	voucher_id UUID REFERENCES vouchers(id),
	created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  	deleted_at TIMESTAMPTZ DEFAULT NULL
);`

/* TYPE
V0S = SINGLE = Product discount
V0M = MULTIPLE = Products discount
V0C = COMBINE = Some Product discount



*/
